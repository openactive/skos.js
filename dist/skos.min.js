var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,d){a!=Array.prototype&&a!=Object.prototype&&(a[b]=d.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.Symbol=function(){var a=0;return function(b){return $jscomp.SYMBOL_PREFIX+(b||"")+a++}}();
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.asyncIterator;a||(a=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};
$jscomp.iteratorFromArray=function(a,b){$jscomp.initSymbolIterator();a instanceof String&&(a+="");var d=0,e={next:function(){if(d<a.length){var c=d++;return{value:b(c,a[c]),done:!1}}e.next=function(){return{done:!0,value:void 0}};return e.next()}};e[Symbol.iterator]=function(){return e};return e};
$jscomp.polyfill=function(a,b,d,e){if(b){d=$jscomp.global;a=a.split(".");for(e=0;e<a.length-1;e++){var c=a[e];c in d||(d[c]={});d=d[c]}a=a[a.length-1];e=d[a];b=b(e);b!=e&&null!=b&&$jscomp.defineProperty(d,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Array.prototype.keys",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(a){return a})}},"es6","es3");
function ConceptScheme(a,b){if(Array.isArray(a)){if("undefined"===typeof b)throw Error("ID must be supplied with Concept array");this.scheme={type:"ConceptScheme",id:b,concept:a}}else if("object"===typeof a&&null!==a&&"undefined"!==typeof a.concept&&"undefined"!==typeof a.id&&"ConceptScheme"===a.type)this.scheme=a;else throw Error("Invalid scheme supplied to ConceptScheme");a=[];b={};for(var d={},e=[],c,g=0;g<this.scheme.concept.length;g++){c=new Concept(this.scheme.concept[g]);d[c.id]=c;b[c.prefLabel]=
c;e.push(c);if(c.altLabel&&Array.isArray(c.altLabel))for(var f=0;f<c.altLabel.length;f++)b[c.altLabel[f]]=c;this.scheme.concept[g].topConceptOf===this.scheme.id&&a.push(c)}for(g=0;g<e.length;g++){c=e[g];f={};var k=c._originalConcept.broader||c._originalConcept.broaderTransitive||[];Array.isArray(k)||(k=[k]);for(var h=0;h<k.length;h++){var l=k[h];if(d[l]){if(!0===f[l])throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+c.id+'" has duplicated broader references to "'+l+'"');c._broaderConcepts.push(d[l]);
f[l]=!0}else throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+c.id+'" has referenced broader Concept "'+l+'", which was not found in scheme');}if(c._originalConcept.related&&Array.isArray(c._originalConcept.related))for(f={},k=0;k<c._originalConcept.related.length;k++)if(h=c._originalConcept.related[k],d[h]){if(!0===f[h])throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+c.id+'" has duplicated related references to "'+h+'"');c._relatedConcepts.push(d[h]);f[h]=!0}else throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+
c.id+'" has referenced related Concept "'+h+'", which was not found in scheme');}for(g=0;g<e.length;g++)for(c=e[g],f=0;f<c._broaderConcepts.length;f++)c._broaderConcepts[f]._narrowerConcepts.push(c);this.topConcepts=a.sort(Concept.compare);this.index=d;this.labelIndex=b}ConceptScheme.prototype.getConceptByID=function(a){if(this.index[a])return this.index[a];a="oa:"===a.substring(0,3)?a.replace("oa:","https://openactive.io/"):a;return this.index[a]?this.index[a]:null};
ConceptScheme.prototype.getConceptByLabel=function(a){return this.labelIndex[a]||null};ConceptScheme.prototype.getAllConcepts=function(){var a=this.index;return(Object.values?Object.values(a):Object.keys(a).map(function(b){return a[b]})).sort(Concept.compare)};ConceptScheme.prototype.getAllConceptsByID=function(){return this.index};ConceptScheme.prototype.getAllConceptsByLabel=function(){return this.labelIndex};ConceptScheme.prototype.getTopConcepts=function(){return this.topConcepts};
ConceptScheme.prototype.getJSON=function(){return this.scheme};ConceptScheme.prototype.toString=function(){function a(b,d){return b.getNarrower().reduce(function(b,c){return b.concat(a(c,d+2))},[Array(d).join(" ")+"- "+b.toString()])}return this.topConcepts.reduce(function(b,d){return b.concat(a(d,1))},[]).join("\n")};
function Concept(a){if(!a.prefLabel||!a.id||"Concept"!==a.type)throw Error('Invalid concept: "'+a.id+'"');this.id=a.id;this.prefLabel=a.prefLabel;this.altLabel=a.altLabel;this.hiddenLabel=a.hiddenLabel;this.definition=a.definition;this._originalConcept=a;this._broaderConcepts=[];this._narrowerConcepts=[];this._relatedConcepts=[]}Concept.prototype.getNarrower=function(){return this._narrowerConcepts.sort(Concept.compare)};
Concept.prototype.getNarrowerTransitive=function(){function a(b,e){for(var c=0;c<b._narrowerConcepts.length;c++){var d=b._narrowerConcepts[c];e[d.id]=d;a(d,e)}return e}var b=a(this,{});return(Object.values?Object.values(b):Object.keys(b).map(function(a){return b[a]})).sort(Concept.compare)};Concept.prototype.getBroader=function(){return this._broaderConcepts.sort(Concept.compare)};
Concept.prototype.getBroaderTransitive=function(){function a(b,e){for(var c=0;c<b._broaderConcepts.length;c++){var d=b._broaderConcepts[c];e[d.id]=d;a(d,e)}return e}var b=a(this,{});return(Object.values?Object.values(b):Object.keys(b).map(function(a){return b[a]})).sort(Concept.compare)};Concept.prototype.getRelated=function(){return this._relatedConcepts.sort(Concept.compare)};Concept.compare=function(a,b){return a.prefLabel<b.prefLabel?-1:a.prefLabel>b.prefLabel?1:0};
Concept.prototype.toString=function(){return this._originalConcept.prefLabel};Concept.prototype.getJSON=function(){return this._originalConcept};var skos={ConceptScheme:ConceptScheme,Concept:Concept};(function(){"undefined"!==typeof module&&module.exports?module.exports=skos:this.skos=skos})();
