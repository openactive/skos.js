var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,d){a!=Array.prototype&&a!=Object.prototype&&(a[c]=d.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.Symbol=function(){var a=0;return function(c){return $jscomp.SYMBOL_PREFIX+(c||"")+a++}}();
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.asyncIterator;a||(a=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};
$jscomp.iteratorFromArray=function(a,c){$jscomp.initSymbolIterator();a instanceof String&&(a+="");var d=0,e={next:function(){if(d<a.length){var b=d++;return{value:c(b,a[b]),done:!1}}e.next=function(){return{done:!0,value:void 0}};return e.next()}};e[Symbol.iterator]=function(){return e};return e};
$jscomp.polyfill=function(a,c,d,e){if(c){d=$jscomp.global;a=a.split(".");for(e=0;e<a.length-1;e++){var b=a[e];b in d||(d[b]={});d=d[b]}a=a[a.length-1];e=d[a];c=c(e);c!=e&&null!=c&&$jscomp.defineProperty(d,a,{configurable:!0,writable:!0,value:c})}};$jscomp.polyfill("Array.prototype.keys",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(a){return a})}},"es6","es3");
function ConceptScheme(a,c,d){if(Array.isArray(a)){if("undefined"===typeof c)throw Error("ID must be supplied with Concept array");this._scheme={"@context":"https://openactive.io/",type:"ConceptScheme",id:c,concept:a}}else if("object"===typeof a&&null!==a&&"undefined"!==typeof a.concept&&"undefined"!==typeof a.id&&"ConceptScheme"===a.type)this._scheme=a;else throw Error("Invalid scheme supplied to ConceptScheme");a=Array.isArray(d)?d.reduce(function(a,b){a[b]=!0;return a},{}):"object"===typeof d?
d:null;c=[];var e={};d={};for(var b,l=0;l<this._scheme.concept.length;l++)if(b=new Concept(this._scheme.concept[l]),b._partOfScheme=!0,d[b.id]=b,null===a||a[b.id])if(c.push(b),e[b.id]=!0,null!==a&&"object"===typeof a[b.id]){var f=a[b.id],g;for(g in f)f.hasOwnProperty(g)&&(b._conceptProperties[g]=f[g])}for(g=0;g<c.length;g++){b=c[g];l={};f=b._conceptProperties.broader||b._conceptProperties.broaderTransitive||[];Array.isArray(f)||(f=[f]);for(var h=0;h<f.length;h++){var k=f[h];if(d[k]){if(!0===l[k])throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+
b.id+'" has duplicated broader references to "'+k+'"');null===a||a[k]||e[k]||(c.push(d[k]),e[k]=!0);b._broaderConcepts.push(d[k]);l[k]=!0}else throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+b.id+'" has referenced broader Concept "'+k+'", which was not found in scheme');}}e=[];g={};l={};for(f=0;f<c.length;f++){b=c[f];g[b.id]=b;l[b.prefLabel]=b;if(b.altLabel&&Array.isArray(b.altLabel))for(h=0;h<b.altLabel.length;h++)l[b.altLabel[h]]=b;b._topConceptOf===this._scheme.id&&e.push(b)}for(f=
0;f<c.length;f++){b=c[f];if(b._conceptProperties.related&&Array.isArray(b._conceptProperties.related))for(h={},k=b._conceptProperties.related.length;k--;){var m=b._conceptProperties.related[k];if(!g[m]&&d[m])b._conceptProperties.related=b._conceptProperties.related.slice(),b._conceptProperties.related.splice(k,1);else if(g[m]){if(!0===h[m])throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+b.id+'" has duplicated related references to "'+m+'"');b._relatedConcepts.push(g[m]);h[m]=!0}else throw Error('Invalid scheme supplied to ConceptScheme: Concept "'+
b.id+'" has referenced related Concept "'+m+'", which was not found in scheme');}for(h=0;h<b._broaderConcepts.length;h++)b._broaderConcepts[h]._narrowerConcepts.push(b)}null!==a&&(this._scheme={"@context":"https://openactive.io/",type:"ConceptScheme",id:this._scheme.id,title:this._scheme.title,description:this._scheme.description,license:this._scheme.license,concept:c.map(function(a){return a._conceptProperties})});this._topConcepts=e.sort(Concept.compare);this._index=g;this._labelIndex=l}
ConceptScheme.prototype.getConceptByID=function(a){return this._index[a]?this._index[a]:null};ConceptScheme.prototype.getConceptByLabel=function(a){return this._labelIndex[a]||null};ConceptScheme.prototype.getAllConcepts=function(){var a=this._index;return(Object.values?Object.values(a):Object.keys(a).map(function(c){return a[c]})).sort(Concept.compare)};ConceptScheme.prototype.getAllConceptsByID=function(){return this._index};ConceptScheme.prototype.getAllConceptsByLabel=function(){return this._labelIndex};
ConceptScheme.prototype.getTopConcepts=function(){return this._topConcepts};ConceptScheme.prototype.getJSON=function(){return this._scheme};ConceptScheme.prototype.toString=function(){function a(c,d){return c.getNarrower().reduce(function(c,b){return c.concat(a(b,d+2))},[Array(d).join(" ")+"- "+c.toString()])}return this._topConcepts.reduce(function(c,d){return c.concat(a(d,1))},[]).join("\n")};ConceptScheme.prototype.generateSubset=function(a){return new ConceptScheme(this._scheme,null,a)};
function Concept(a){if(!a.prefLabel||!a.id||"Concept"!==a.type)throw Error('Invalid concept: "'+a.id+'"');this.id=a.id;this.prefLabel=a.prefLabel;this.altLabel=a.altLabel;this.hiddenLabel=a.hiddenLabel;this.definition=a.definition;this._topConceptOf=a.topConceptOf;this._partOfScheme=!1;this._broaderConcepts=[];this._narrowerConcepts=[];this._relatedConcepts=[];this._conceptProperties={};for(var c in a)a.hasOwnProperty(c)&&(this._conceptProperties[c]=a[c])}
Concept.prototype.getNarrower=function(){if(!this._partOfScheme)throw Error("Concept must have been generated by ConceptScheme to support getNarrower");return this._narrowerConcepts.sort(Concept.compare)};
Concept.prototype.getNarrowerTransitive=function(){function a(c,e){for(var b=0;b<c._narrowerConcepts.length;b++){var d=c._narrowerConcepts[b];e[d.id]=d;a(d,e)}return e}if(!this._partOfScheme)throw Error("Concept must have been generated by ConceptScheme to support getNarrowerTransitive");var c=a(this,{});return(Object.values?Object.values(c):Object.keys(c).map(function(a){return c[a]})).sort(Concept.compare)};
Concept.prototype.getBroader=function(){if(!this._partOfScheme)throw Error("Concept must have been generated by ConceptScheme to support getBroader");return this._broaderConcepts.sort(Concept.compare)};
Concept.prototype.getBroaderTransitive=function(){function a(c,e){for(var b=0;b<c._broaderConcepts.length;b++){var d=c._broaderConcepts[b];e[d.id]=d;a(d,e)}return e}if(!this._partOfScheme)throw Error("Concept must have been generated by ConceptScheme to support getBroaderTransitive");var c=a(this,{});return(Object.values?Object.values(c):Object.keys(c).map(function(a){return c[a]})).sort(Concept.compare)};
Concept.prototype.getRelated=function(){if(!this._partOfScheme)throw Error("Concept must have been generated by ConceptScheme to support getRelated");return this._relatedConcepts.sort(Concept.compare)};Concept.prototype.equals=function(a){a=null===a||"undefined"===typeof a.constructor||"Concept"!==a.constructor.name?new Concept(a):a;return this.id===a.id};Concept.compare=function(a,c){return a.prefLabel<c.prefLabel?-1:a.prefLabel>c.prefLabel?1:0};Concept.prototype.toString=function(){return this._conceptProperties.prefLabel};
Concept.prototype.getJSON=function(){return this._conceptProperties};var skos={ConceptScheme:ConceptScheme,Concept:Concept};(function(){"undefined"!==typeof module&&module.exports?module.exports=skos:this.skos=skos})();
